geom_errorbar(aes(ymin = mean-se, ymax = mean+se), width = 0.3, lwd=0.7, position = position_dodge(0.9)) +
scale_fill_manual(values = c("royalblue2", "darkgoldenrod1", "darkorange1", "red3", "darkorchid4", "springgreen1"), drop = FALSE, name = "Site") +
theme_bw() + expand_limits(y = 0) +
annotate("segment", x=-Inf, xend=-Inf, y=-Inf, yend=Inf, colour = "black", size=2) +
theme(line= element_line(size = 1),
axis.line = element_line(colour = "black"),
axis.ticks.length = unit(0.2 , "cm"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
strip.background = element_blank(),
strip.text.x = element_text(color = "black", size = 20, angle = 0, hjust = 0, vjust = 0.5, face = "plain"),
panel.spacing = unit(3, "lines")) + xlab(label = "Species") + ylab(label = "Thermal threshold (°C relative to local MMM)")+
theme(axis.text.x = element_text(color = "black", size = 20, angle = 0, hjust = .5, vjust = .5, face = "plain"),
axis.text.y = element_text(color = "black", size = 20, angle = 0, hjust = .5, vjust = .5, face = "plain"),
axis.title.x = element_text(color = "black", size = 20, angle = 0, hjust = .5, vjust = 0, face = "plain"),
axis.title.y = element_text(color = "black", size = 20, angle = 90, hjust = .5, vjust = .5, face = "plain"),
legend.title = element_text(colour="black", size=20, face="bold"),
legend.text = element_text(colour="black", size=18, face="plain")) +
geom_point(data=Relative_thresholds,aes(Species,Relative_Threshold,color=Site),position=position_jitterdodge(dodge.width = 0.9, jitter.width = 0.15), shape=21, color='black') +
scale_colour_manual(values = c("royalblue2", "darkgoldenrod1", "darkorange1", "red3", "darkorchid4", "springgreen1"))
Threshold_by_species
####
Threshold_by_site<-ggplot(threshold_summary, aes(x = Site, y = mean, fill = Species)) +
geom_bar(stat="identity", color="black", position=position_dodge()) +
geom_errorbar(aes(ymin = mean-se, ymax = mean+se), width = 0.3, lwd=0.7, position = position_dodge(0.9)) +
scale_fill_manual(values = c("#E08963", "#ffaf4d", "#E0BBE4", "#349fa4"), drop = FALSE, name = "Site") +
theme_bw() + expand_limits(y = 0) +
annotate("segment", x=-Inf, xend=-Inf, y=-Inf, yend=Inf, colour = "black", size=2) +
theme(line= element_line(size = 1),
axis.line = element_line(colour = "black"),
axis.ticks.length = unit(0.2 , "cm"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
strip.background = element_blank(),
strip.text.x = element_text(color = "black", size = 12, angle = 0, hjust = 0, vjust = 0.5, face = "plain"),
panel.spacing = unit(3, "lines")) + xlab(label = "Site") + ylab(label = "Thermal threshold (°C relative to local MMM)")+
theme(axis.text.x = element_text(color = "black", size = 12, angle = 0, hjust = .5, vjust = .5, face = "plain"),
axis.text.y = element_text(color = "black", size = 12, angle = 0, hjust = .5, vjust = .5, face = "plain"),
axis.title.x = element_text(color = "black", size = 12, angle = 0, hjust = .5, vjust = 0, face = "plain"),
axis.title.y = element_text(color = "black", size = 12, angle = 90, hjust = .5, vjust = .5, face = "plain"),
legend.title = element_text(colour="black", size=12, face="bold"),
legend.text = element_text(colour="black", size=12, face="plain")) +
geom_point(data=Relative_thresholds,aes(Site,Relative_Threshold,color=Species),position=position_jitterdodge(dodge.width = 0.9, jitter.width = 0.15), shape=21, color='black') +
scale_colour_manual(values = c("#E08963", "#ffaf4d", "#E0BBE4", "#349fa4"))
Threshold_by_site
#END
View(Relative_Threshold_mod)
View(Relative_thresholds)
Threshold_MMM_Corr <- cor.test(x = Relative_thresholds$ED50, y = Relative_thresholds$MMM, method = "pearson")
Threshold_MMM_Corr$p.value #0.033
ggplot(Relative_thresholds,aes(x=ED50,y=MMM)) +
theme_classic() +
stat_smooth(method = "lm",formula = y ~ x, se = TRUE, level = 0.95, na.rm = TRUE, colour="grey40")+
stat_poly_eq(aes(label= paste(..eq.label..)), npcx = "right", npcy = 0.2, formula = y ~ x, parse=TRUE, size = 4)+
stat_poly_eq(aes(label= paste(..rr.label..)), npcx = "right", npcy = 0.15, formula = y ~ x, parse=TRUE, size = 4)+
stat_fit_glance(method = 'lm', method.args = list(formula=y ~ x), aes(label = paste("P-value = ", signif(..p.value.., digits = 2), sep = "")),npcx = "right", npcy = 0.1, size = 4)+
geom_point(color="dodgerblue",size = 8, alpha=0.8) +
theme(legend.position = 'bottom')+
#scale_x_continuous(limits = c(-0.5, -0.2))+
#scale_y_continuous(limits = c(-0.5, -0.2))+
ggtitle("ED50s vs. site MMM") + xlab("ED50s") + ylab("Site MMM")+
geom_text(aes(label=Geno), vjust=0, size=3)+
theme(line= element_line(size = 1),
axis.line = element_line(colour = "grey20"),
axis.text.x = element_text(color = "grey20", size = 10, angle = 0, hjust = .5, vjust = .5, face = "plain"),
axis.text.y = element_text(color = "grey20", size = 10, angle = 0, hjust = .5, vjust = .5, face = "plain"),
axis.title.x = element_text(color = "grey20", size = 10, angle = 0, hjust = .5, vjust = 0, face = "plain"),
axis.title.y = element_text(color = "grey20", size = 10, angle = 90, hjust = .5, vjust = .5, face = "plain"),
legend.title = element_text(colour="grey20", size=10, face="bold"),
legend.text = element_text(colour="grey20", size=10, face="plain")) + scale_shape_manual(values=c(16, 16))
####################################
library(emmeans)
library(sjPlot)
library(ggplot2)
library(tidyr)
library(plyr)
library(reshape2)
library(dplyr)
ggplot(Relative_thresholds,aes(x=ED50,y=MMM)) +
theme_classic() +
stat_smooth(method = "lm",formula = y ~ x, se = TRUE, level = 0.95, na.rm = TRUE, colour="grey40")+
stat_poly_eq(aes(label= paste(..eq.label..)), npcx = "right", npcy = 0.2, formula = y ~ x, parse=TRUE, size = 4)+
stat_poly_eq(aes(label= paste(..rr.label..)), npcx = "right", npcy = 0.15, formula = y ~ x, parse=TRUE, size = 4)+
stat_fit_glance(method = 'lm', method.args = list(formula=y ~ x), aes(label = paste("P-value = ", signif(..p.value.., digits = 2), sep = "")),npcx = "right", npcy = 0.1, size = 4)+
geom_point(color="dodgerblue",size = 8, alpha=0.8) +
theme(legend.position = 'bottom')+
#scale_x_continuous(limits = c(-0.5, -0.2))+
#scale_y_continuous(limits = c(-0.5, -0.2))+
ggtitle("ED50s vs. site MMM") + xlab("ED50s") + ylab("Site MMM")+
geom_text(aes(label=Geno), vjust=0, size=3)+
theme(line= element_line(size = 1),
axis.line = element_line(colour = "grey20"),
axis.text.x = element_text(color = "grey20", size = 10, angle = 0, hjust = .5, vjust = .5, face = "plain"),
axis.text.y = element_text(color = "grey20", size = 10, angle = 0, hjust = .5, vjust = .5, face = "plain"),
axis.title.x = element_text(color = "grey20", size = 10, angle = 0, hjust = .5, vjust = 0, face = "plain"),
axis.title.y = element_text(color = "grey20", size = 10, angle = 90, hjust = .5, vjust = .5, face = "plain"),
legend.title = element_text(colour="grey20", size=10, face="bold"),
legend.text = element_text(colour="grey20", size=10, face="plain")) + scale_shape_manual(values=c(16, 16))
ggplot(Relative_thresholds,aes(x=ED50,y=MMM)) +
theme_classic() +
stat_smooth(method = "lm",formula = y ~ x, se = TRUE, level = 0.95, na.rm = TRUE, colour="grey40")+
stat_fit_glance(method = 'lm', method.args = list(formula=y ~ x), aes(label = paste("P-value = ", signif(..p.value.., digits = 2), sep = "")),npcx = "right", npcy = 0.1, size = 4)+
geom_point(color="dodgerblue",size = 8, alpha=0.8) +
theme(legend.position = 'bottom')+
#scale_x_continuous(limits = c(-0.5, -0.2))+
#scale_y_continuous(limits = c(-0.5, -0.2))+
ggtitle("ED50s vs. site MMM") + xlab("ED50s") + ylab("Site MMM")+
geom_text(aes(label=Geno), vjust=0, size=3)+
theme(line= element_line(size = 1),
axis.line = element_line(colour = "grey20"),
axis.text.x = element_text(color = "grey20", size = 10, angle = 0, hjust = .5, vjust = .5, face = "plain"),
axis.text.y = element_text(color = "grey20", size = 10, angle = 0, hjust = .5, vjust = .5, face = "plain"),
axis.title.x = element_text(color = "grey20", size = 10, angle = 0, hjust = .5, vjust = 0, face = "plain"),
axis.title.y = element_text(color = "grey20", size = 10, angle = 90, hjust = .5, vjust = .5, face = "plain"),
legend.title = element_text(colour="grey20", size=10, face="bold"),
legend.text = element_text(colour="grey20", size=10, face="plain")) + scale_shape_manual(values=c(16, 16))
#END
library(tidyverse)
library(ggpubr)
library(ggpmisc)
library(svglite)
ggplot(Relative_thresholds,aes(x=ED50,y=MMM)) +
theme_classic() +
stat_smooth(method = "lm",formula = y ~ x, se = TRUE, level = 0.95, na.rm = TRUE, colour="grey40")+
stat_poly_eq(aes(label= paste(..eq.label..)), npcx = "right", npcy = 0.2, formula = y ~ x, parse=TRUE, size = 4)+
stat_poly_eq(aes(label= paste(..rr.label..)), npcx = "right", npcy = 0.15, formula = y ~ x, parse=TRUE, size = 4)+
stat_fit_glance(method = 'lm', method.args = list(formula=y ~ x), aes(label = paste("P-value = ", signif(..p.value.., digits = 2), sep = "")),npcx = "right", npcy = 0.1, size = 4)+
geom_point(color="dodgerblue",size = 8, alpha=0.8) +
theme(legend.position = 'bottom')+
#scale_x_continuous(limits = c(-0.5, -0.2))+
#scale_y_continuous(limits = c(-0.5, -0.2))+
ggtitle("ED50s vs. site MMM") + xlab("ED50s") + ylab("Site MMM")+
geom_text(aes(label=Geno), vjust=0, size=3)+
theme(line= element_line(size = 1),
axis.line = element_line(colour = "grey20"),
axis.text.x = element_text(color = "grey20", size = 10, angle = 0, hjust = .5, vjust = .5, face = "plain"),
axis.text.y = element_text(color = "grey20", size = 10, angle = 0, hjust = .5, vjust = .5, face = "plain"),
axis.title.x = element_text(color = "grey20", size = 10, angle = 0, hjust = .5, vjust = 0, face = "plain"),
axis.title.y = element_text(color = "grey20", size = 10, angle = 90, hjust = .5, vjust = .5, face = "plain"),
legend.title = element_text(colour="grey20", size=10, face="bold"),
legend.text = element_text(colour="grey20", size=10, face="plain")) + scale_shape_manual(values=c(16, 16))
#END
ggplot(Relative_thresholds,aes(x=ED50,y=MMM)) +
theme_classic() +
stat_smooth(method = "lm",formula = y ~ x, se = TRUE, level = 0.95, na.rm = TRUE, colour="grey40")+
stat_poly_eq(aes(label= paste(..eq.label..)), npcx = "right", npcy = 0.2, formula = y ~ x, parse=TRUE, size = 4)+
stat_poly_eq(aes(label= paste(..rr.label..)), npcx = "right", npcy = 0.15, formula = y ~ x, parse=TRUE, size = 4)+
stat_fit_glance(method = 'lm', method.args = list(formula=y ~ x), aes(label = paste("P-value = ", signif(..p.value.., digits = 2), sep = "")),npcx = "right", npcy = 0.1, size = 4)+
geom_point(color=Species,size = 8, alpha=0.8) +
theme(legend.position = 'bottom')+
#scale_x_continuous(limits = c(-0.5, -0.2))+
#scale_y_continuous(limits = c(-0.5, -0.2))+
ggtitle("ED50s vs. site MMM") + xlab("ED50s") + ylab("Site MMM")+
geom_text(aes(label=Geno), vjust=0, size=3)+
theme(line= element_line(size = 1),
axis.line = element_line(colour = "grey20"),
axis.text.x = element_text(color = "grey20", size = 10, angle = 0, hjust = .5, vjust = .5, face = "plain"),
axis.text.y = element_text(color = "grey20", size = 10, angle = 0, hjust = .5, vjust = .5, face = "plain"),
axis.title.x = element_text(color = "grey20", size = 10, angle = 0, hjust = .5, vjust = 0, face = "plain"),
axis.title.y = element_text(color = "grey20", size = 10, angle = 90, hjust = .5, vjust = .5, face = "plain"),
legend.title = element_text(colour="grey20", size=10, face="bold"),
legend.text = element_text(colour="grey20", size=10, face="plain")) + scale_shape_manual(values=c(16, 16))
#END
ggplot(Relative_thresholds,aes(x=ED50,y=MMM,color=Species)) +
theme_classic() +
stat_smooth(method = "lm",formula = y ~ x, se = TRUE, level = 0.95, na.rm = TRUE, colour="grey40")+
stat_poly_eq(aes(label= paste(..eq.label..)), npcx = "right", npcy = 0.2, formula = y ~ x, parse=TRUE, size = 4)+
stat_poly_eq(aes(label= paste(..rr.label..)), npcx = "right", npcy = 0.15, formula = y ~ x, parse=TRUE, size = 4)+
stat_fit_glance(method = 'lm', method.args = list(formula=y ~ x), aes(label = paste("P-value = ", signif(..p.value.., digits = 2), sep = "")),npcx = "right", npcy = 0.1, size = 4)+
geom_point(size = 6, alpha=0.8) +
theme(legend.position = 'bottom')+
#scale_x_continuous(limits = c(-0.5, -0.2))+
#scale_y_continuous(limits = c(-0.5, -0.2))+
ggtitle("ED50s vs. site MMM") + xlab("ED50s") + ylab("Site MMM")+
geom_text(aes(label=Geno), vjust=0, size=3)+
theme(line= element_line(size = 1),
axis.line = element_line(colour = "grey20"),
axis.text.x = element_text(color = "grey20", size = 10, angle = 0, hjust = .5, vjust = .5, face = "plain"),
axis.text.y = element_text(color = "grey20", size = 10, angle = 0, hjust = .5, vjust = .5, face = "plain"),
axis.title.x = element_text(color = "grey20", size = 10, angle = 0, hjust = .5, vjust = 0, face = "plain"),
axis.title.y = element_text(color = "grey20", size = 10, angle = 90, hjust = .5, vjust = .5, face = "plain"),
legend.title = element_text(colour="grey20", size=10, face="bold"),
legend.text = element_text(colour="grey20", size=10, face="plain")) + scale_shape_manual(values=c(16, 16))
#END
ggplot(Acropora_relative,aes(x=ED50,y=MMM,color=Species)) +
theme_classic() +
stat_smooth(method = "lm",formula = y ~ x, se = TRUE, level = 0.95, na.rm = TRUE, colour="grey40")+
stat_poly_eq(aes(label= paste(..eq.label..)), npcx = "right", npcy = 0.2, formula = y ~ x, parse=TRUE, size = 4)+
stat_poly_eq(aes(label= paste(..rr.label..)), npcx = "right", npcy = 0.15, formula = y ~ x, parse=TRUE, size = 4)+
stat_fit_glance(method = 'lm', method.args = list(formula=y ~ x), aes(label = paste("P-value = ", signif(..p.value.., digits = 2), sep = "")),npcx = "right", npcy = 0.1, size = 4)+
geom_point(size = 6, alpha=0.8) +
theme(legend.position = 'bottom')+
#scale_x_continuous(limits = c(-0.5, -0.2))+
#scale_y_continuous(limits = c(-0.5, -0.2))+
ggtitle("ED50s vs. site MMM") + xlab("ED50s") + ylab("Site MMM")+
geom_text(aes(label=Geno), vjust=0, size=3)+
theme(line= element_line(size = 1),
axis.line = element_line(colour = "grey20"),
axis.text.x = element_text(color = "grey20", size = 10, angle = 0, hjust = .5, vjust = .5, face = "plain"),
axis.text.y = element_text(color = "grey20", size = 10, angle = 0, hjust = .5, vjust = .5, face = "plain"),
axis.title.x = element_text(color = "grey20", size = 10, angle = 0, hjust = .5, vjust = 0, face = "plain"),
axis.title.y = element_text(color = "grey20", size = 10, angle = 90, hjust = .5, vjust = .5, face = "plain"),
legend.title = element_text(colour="grey20", size=10, face="bold"),
legend.text = element_text(colour="grey20", size=10, face="plain")) + scale_shape_manual(values=c(16, 16))
#END
ggplot(Pocillopora_relative,aes(x=ED50,y=MMM,color=Species)) +
theme_classic() +
stat_smooth(method = "lm",formula = y ~ x, se = TRUE, level = 0.95, na.rm = TRUE, colour="grey40")+
stat_poly_eq(aes(label= paste(..eq.label..)), npcx = "right", npcy = 0.2, formula = y ~ x, parse=TRUE, size = 4)+
stat_poly_eq(aes(label= paste(..rr.label..)), npcx = "right", npcy = 0.15, formula = y ~ x, parse=TRUE, size = 4)+
stat_fit_glance(method = 'lm', method.args = list(formula=y ~ x), aes(label = paste("P-value = ", signif(..p.value.., digits = 2), sep = "")),npcx = "right", npcy = 0.1, size = 4)+
geom_point(size = 6, alpha=0.8) +
theme(legend.position = 'bottom')+
#scale_x_continuous(limits = c(-0.5, -0.2))+
#scale_y_continuous(limits = c(-0.5, -0.2))+
ggtitle("ED50s vs. site MMM") + xlab("ED50s") + ylab("Site MMM")+
geom_text(aes(label=Geno), vjust=0, size=3)+
theme(line= element_line(size = 1),
axis.line = element_line(colour = "grey20"),
axis.text.x = element_text(color = "grey20", size = 10, angle = 0, hjust = .5, vjust = .5, face = "plain"),
axis.text.y = element_text(color = "grey20", size = 10, angle = 0, hjust = .5, vjust = .5, face = "plain"),
axis.title.x = element_text(color = "grey20", size = 10, angle = 0, hjust = .5, vjust = 0, face = "plain"),
axis.title.y = element_text(color = "grey20", size = 10, angle = 90, hjust = .5, vjust = .5, face = "plain"),
legend.title = element_text(colour="grey20", size=10, face="bold"),
legend.text = element_text(colour="grey20", size=10, face="plain")) + scale_shape_manual(values=c(16, 16))
#END
ggplot(Stylophora_relative,aes(x=ED50,y=MMM,color=Species)) +
theme_classic() +
stat_smooth(method = "lm",formula = y ~ x, se = TRUE, level = 0.95, na.rm = TRUE, colour="grey40")+
stat_poly_eq(aes(label= paste(..eq.label..)), npcx = "right", npcy = 0.2, formula = y ~ x, parse=TRUE, size = 4)+
stat_poly_eq(aes(label= paste(..rr.label..)), npcx = "right", npcy = 0.15, formula = y ~ x, parse=TRUE, size = 4)+
stat_fit_glance(method = 'lm', method.args = list(formula=y ~ x), aes(label = paste("P-value = ", signif(..p.value.., digits = 2), sep = "")),npcx = "right", npcy = 0.1, size = 4)+
geom_point(size = 6, alpha=0.8) +
theme(legend.position = 'bottom')+
#scale_x_continuous(limits = c(-0.5, -0.2))+
#scale_y_continuous(limits = c(-0.5, -0.2))+
ggtitle("ED50s vs. site MMM") + xlab("ED50s") + ylab("Site MMM")+
geom_text(aes(label=Geno), vjust=0, size=3)+
theme(line= element_line(size = 1),
axis.line = element_line(colour = "grey20"),
axis.text.x = element_text(color = "grey20", size = 10, angle = 0, hjust = .5, vjust = .5, face = "plain"),
axis.text.y = element_text(color = "grey20", size = 10, angle = 0, hjust = .5, vjust = .5, face = "plain"),
axis.title.x = element_text(color = "grey20", size = 10, angle = 0, hjust = .5, vjust = 0, face = "plain"),
axis.title.y = element_text(color = "grey20", size = 10, angle = 90, hjust = .5, vjust = .5, face = "plain"),
legend.title = element_text(colour="grey20", size=10, face="bold"),
legend.text = element_text(colour="grey20", size=10, face="plain")) + scale_shape_manual(values=c(16, 16))
#END
ggplot(Porites_relative,aes(x=ED50,y=MMM,color=Species)) +
theme_classic() +
stat_smooth(method = "lm",formula = y ~ x, se = TRUE, level = 0.95, na.rm = TRUE, colour="grey40")+
stat_poly_eq(aes(label= paste(..eq.label..)), npcx = "right", npcy = 0.2, formula = y ~ x, parse=TRUE, size = 4)+
stat_poly_eq(aes(label= paste(..rr.label..)), npcx = "right", npcy = 0.15, formula = y ~ x, parse=TRUE, size = 4)+
stat_fit_glance(method = 'lm', method.args = list(formula=y ~ x), aes(label = paste("P-value = ", signif(..p.value.., digits = 2), sep = "")),npcx = "right", npcy = 0.1, size = 4)+
geom_point(size = 6, alpha=0.8) +
theme(legend.position = 'bottom')+
#scale_x_continuous(limits = c(-0.5, -0.2))+
#scale_y_continuous(limits = c(-0.5, -0.2))+
ggtitle("ED50s vs. site MMM") + xlab("ED50s") + ylab("Site MMM")+
geom_text(aes(label=Geno), vjust=0, size=3)+
theme(line= element_line(size = 1),
axis.line = element_line(colour = "grey20"),
axis.text.x = element_text(color = "grey20", size = 10, angle = 0, hjust = .5, vjust = .5, face = "plain"),
axis.text.y = element_text(color = "grey20", size = 10, angle = 0, hjust = .5, vjust = .5, face = "plain"),
axis.title.x = element_text(color = "grey20", size = 10, angle = 0, hjust = .5, vjust = 0, face = "plain"),
axis.title.y = element_text(color = "grey20", size = 10, angle = 90, hjust = .5, vjust = .5, face = "plain"),
legend.title = element_text(colour="grey20", size=10, face="bold"),
legend.text = element_text(colour="grey20", size=10, face="plain")) + scale_shape_manual(values=c(16, 16))
#END
setwd("~/Documents/ODU_Post-doc/Writing/Gradient_physiology/Gradient-physiology/Figures/Figure 3")
library(emmeans)
library(sjPlot)
library(ggplot2)
library(tidyr)
library(plyr)
library(reshape2)
library(dplyr)
library(tidyverse)
library(ggpubr)
library(ggpmisc)
library(svglite)
Relative_thresholds<-read.csv("Relative_Thresholds.csv")
Relative_thresholds$Site<-as.factor(Relative_thresholds$Site)
Relative_thresholds$Species<-as.factor(Relative_thresholds$Species)
str(Relative_thresholds)
Acropora_relative<-subset(Relative_thresholds, Species=='Acropora')
Pocillopora_relative<-subset(Relative_thresholds, Species=='Pocillopora')
Porites_relative<-subset(Relative_thresholds, Species=='Porites')
Stylophora_relative<-subset(Relative_thresholds, Species=='Stylophora')
Threshold_MMM_Corr <- cor.test(x = Relative_thresholds$ED50, y = Relative_thresholds$MMM, method = "pearson")
Threshold_MMM_Corr$p.value # < 0.001
summary(Threshold_MMM_Corr) #$p.value # < 0.001
Threshold_MMM_Corr #$p.value # < 0.001
Threshold_MMM_Corr <- cor.test(x = Relative_thresholds$ED50, y = Relative_thresholds$Collection_temp, method = "pearson")
Threshold_MMM_Corr #p.value = < 0.001, Cor = 0.34
Threshold_Collection_temp_Corr #p.value = < 0.001, Cor = 0.32
Threshold_Collection_temp_Corr <- cor.test(x = Relative_thresholds$ED50, y = Relative_thresholds$Collection_temp, method = "pearson")
Threshold_Collection_temp_Corr #p.value = < 0.001, Cor = 0.32
LM1<- lm(ED50 ~ MMM, data =Relative_thresholds)
summary(LM1)
LM1<- lm(ED50 ~ Collection_temp, data = Relative_thresholds)
LM2<- lm(ED50 ~ Collection_temp, data = Relative_thresholds)
summary(LM2)
LM3<- lm(ED50 ~ MMM+Collection_temp, data = Relative_thresholds)
summary(LM3)
AIC(LM1, LM2, LM3)
library(AICcmodavg)
library(AICcmodavg)
Can.mod<-list()
Can.mod[[1]]<-lm(ED50 ~ MMM, data = Relative_thresholds)
Can.mod[[2]]<-lm(ED50 ~ Collection_temp, data = Relative_thresholds)
Can.mod[[3]]<-lm(ED50 ~ MMM + Collection_temp, data = Relative_thresholds)
aic_out<-aictab(cand.set = Can.mod)
aic_out
summary(Can.mod[[3]])aic_out<-aictab(cand.set = Can.mod)
aic_out
summary(Can.mod[[3]])
#Heatmap
heatmap_data<-read.csv("Coral_heatmap.csv")
setwd("~/Documents/ODU_Post-doc/Writing/Gradient_physiology/Gradient-physiology/Figures/Figure 3")
#Heatmap
heatmap_data<-read.csv("Coral_heatmap.csv")
#Heatmap
heatmap_data<-read.csv("Coral_heatmap.csv")
#Heatmap
heatmap_data<-read.csv("Coral_heatmap.csv")
#Heatmap
heatmap_data<-read.csv("Heatmap_data.csv")
#Heatmap
Heatmap_data<-read.csv("Heatmap_data.csv")
View(Heatmap_data)
#Heatmap
heatmap_data<-read.csv("Coral_heatmap.csv")
data_matrix <- data.matrix(heatmap_data)
?heatmap
coral_heatmap <- heatmap(heatmap_data, Rowv=NA, Colv=NA, col = cm.colors(256), scale="column", margins=c(5,10))
coral_heatmap <- heatmap(data_matrix, Rowv=NA, Colv=NA, col = cm.colors(256), scale="column", margins=c(5,10))
coral_heatmap <- heatmap(data_matrix, Rowv=NA, Colv=NA, col = cm.colors(256), scale="row", margins=c(5,10))
View(data_matrix)
View(coral_heatmap)
View(data_matrix)
exp1_heatmap <- pheatmap(heatmap_data,color = brewer.pal(n = 8, name = "YlGnBu"),
cluster_cols=FALSE,cluster_rows=FALSE,scale="none",breaks=breaks,
annotation_row=exp1_rowmeta,annotation_col=exp1_colmeta,
fontsize_row=8,fontsize_col=6,angle_col=45,cellwidth=8,border_color="grey87",
main="Coral ranking at each site and overall")
install.packages("pheatmap")
#Heatmap
library(pheatmap)
coral_heatmap2 <- pheatmap(heatmap_data,color = brewer.pal(n = 8, name = "YlGnBu"),
cluster_cols=FALSE,cluster_rows=FALSE,scale="none",breaks=breaks,
annotation_row=exp1_rowmeta,annotation_col=exp1_colmeta,
fontsize_row=8,fontsize_col=6,angle_col=45,cellwidth=8,border_color="grey87",
main="Coral ranking at each site and overall")
breaks=c(0.1,1,2,4,6,10,15,20,25)
coral_heatmap2 <- pheatmap(heatmap_data,color = brewer.pal(n = 8, name = "YlGnBu"),
cluster_cols=FALSE,cluster_rows=FALSE,scale="none",breaks=breaks,
annotation_row=exp1_rowmeta,annotation_col=exp1_colmeta,
fontsize_row=8,fontsize_col=6,angle_col=45,cellwidth=8,border_color="grey87",
main="Coral ranking at each site and overall")
library(RColorBrewer)
breaks=c(0.1,1,2,4,6,10,15,20,25)
coral_heatmap2 <- pheatmap(heatmap_data,color = brewer.pal(n = 8, name = "YlGnBu"),
cluster_cols=FALSE,cluster_rows=FALSE,scale="none",breaks=breaks,
annotation_row=exp1_rowmeta,annotation_col=exp1_colmeta,
fontsize_row=8,fontsize_col=6,angle_col=45,cellwidth=8,border_color="grey87",
main="Coral ranking at each site and overall")
coral_heatmap2 <- pheatmap(data_matrix,color = brewer.pal(n = 8, name = "YlGnBu"),
cluster_cols=FALSE,cluster_rows=FALSE,scale="none",breaks=breaks,
annotation_row=exp1_rowmeta,annotation_col=exp1_colmeta,
fontsize_row=8,fontsize_col=6,angle_col=45,cellwidth=8,border_color="grey87",
main="Coral ranking at each site and overall")
View(heatmap_data)
coral_heatmap2 <- pheatmap(data_matrix,color = brewer.pal(n = 8, name = "YlGnBu"),
cluster_cols=FALSE,cluster_rows=FALSE,scale="none",breaks=breaks,
annotation_row=exp1_rowmeta,annotation_col=heatmap_data$Coral.species,
fontsize_row=8,fontsize_col=6,angle_col=45,cellwidth=8,border_color="grey87",
main="Coral ranking at each site and overall")
View(heatmap_data)
data_matrix <- data.matrix(heatmap_data[,2:7])
coral_heatmap2 <- pheatmap(data_matrix,main = "pheatmap")
coral_heatmap2 <- pheatmap(data_matrix,cluster_cols = F,main = "pheatmap")
coral_heatmap2 <- pheatmap(data_matrix,cluster_cols=FALSE,cluster_rows=FALSE,scale="none",main = "pheatmap")
coral_heatmap2 <- pheatmap(data_matrix,cluster_cols=FALSE,cluster_rows=FALSE,scale="row",main = "pheatmap")
coral_heatmap2 <- pheatmap(data_matrix,cluster_cols=FALSE,cluster_rows=FALSE,scale="none")
coral_heatmap2 <- pheatmap(data_matrix,cluster_cols=FALSE,cluster_rows=FALSE,scale="none",
fontsize_row=8,fontsize_col=6,angle_col=45,cellwidth=8,border_color="grey87")
coral_heatmap2 <- pheatmap(data_matrix,cluster_cols=FALSE,cluster_rows=FALSE,scale="none",
fontsize_row=8,fontsize_col=6,angle_col=45,border_color="grey87")
coral_heatmap2 <- pheatmap(data_matrix,cluster_cols=FALSE,cluster_rows=FALSE,scale="none",
fontsize_row=8,fontsize_col=15,angle_col=45,border_color="grey87")
coral_heatmap2 <- pheatmap(data_matrix,cluster_cols=FALSE,cluster_rows=FALSE,scale="none", annotation_row=heatmap_data$Coral.species,
fontsize_row=12,fontsize_col=12,angle_col=45,border_color="grey87")
coral_heatmap2 <- pheatmap(data_matrix,cluster_cols=FALSE,cluster_rows=FALSE,scale="none", annotation_col = heatmap_data$Coral.species,
fontsize_row=12,fontsize_col=12,angle_col=45,border_color="grey87")
row_meta<-heatmap_data[,1]
coral_heatmap2 <- pheatmap(data_matrix,cluster_cols=FALSE,cluster_rows=FALSE,scale="none", annotation_row=row_meta,
fontsize_row=12,fontsize_col=12,angle_col=45,border_color="grey87")
rownames(heatmap_data) = sapply(heatmap_data$Coral.species,function(x) strsplit(as.character(x),split = "\\\\")[[1]][1])
View(heatmap_data)
View(data_matrix)
rownames(data_matrix) = sapply(heatmap_data$Coral.species,function(x) strsplit(as.character(x),split = "\\\\")[[1]][1])
View(data_matrix)
coral_heatmap2 <- pheatmap(data_matrix,cluster_cols=FALSE,cluster_rows=FALSE,scale="none",
fontsize_row=12,fontsize_col=12,angle_col=45,border_color="grey87")
coral_heatmap2 <- pheatmap(data_matrix,cluster_cols=FALSE,cluster_rows=FALSE,scale="none",
fontsize_row=12,fontsize_col=12,angle_col=45,border_color="grey87",
scale_colour_brewer(palette="BuPu", direction=-1))
coral_heatmap2 <- pheatmap(data_matrix,cluster_cols=FALSE,cluster_rows=FALSE,scale="none",
fontsize_row=12,fontsize_col=12,angle_col=45,border_color="grey87",
color = brewer.pal(n = 4, name = "YlGnBu", direction=-1))
coral_heatmap2 <- pheatmap(data_matrix,cluster_cols=FALSE,cluster_rows=FALSE,scale="none",
fontsize_row=12,fontsize_col=12,angle_col=45,border_color="grey87",
color = brewer.pal(n = 4, name = "YlGnBu"))
coral_heatmap2 <- pheatmap(data_matrix,cluster_cols=FALSE,cluster_rows=FALSE,scale="none",
fontsize_row=12,fontsize_col=12,angle_col=45,border_color="grey87",
color = brewer.pal(n = 6, name = "YlGnBu"))
coral_heatmap2 <- pheatmap(data_matrix,cluster_cols=FALSE,cluster_rows=FALSE,scale="none",
fontsize_row=12,fontsize_col=12,angle_col=45,border_color="grey87",
color = brewer.pal(n = 6, name = "Set1"))
coral_heatmap2 <- pheatmap(data_matrix,cluster_cols=FALSE,cluster_rows=FALSE,scale="none",
fontsize_row=12,fontsize_col=12,angle_col=45,border_color="grey87",
color = brewer.pal(n = 4, name = "Set1"))
coral_heatmap2 <- pheatmap(data_matrix,cluster_cols=FALSE,cluster_rows=FALSE,scale="none",
fontsize_row=12,fontsize_col=12,angle_col=45,border_color="grey87",
color = brewer.pal(n = 4, name = "YlOrRd"))
coral_heatmap2 <- pheatmap(data_matrix,cluster_cols=FALSE,cluster_rows=FALSE,scale="none",
fontsize_row=12,fontsize_col=12,angle_col=45,border_color="grey87",
color = brewer.pal(n = 4, name = "YlOrRd"), cellheight = 8)
coral_heatmap2 <- pheatmap(data_matrix,cluster_cols=FALSE,cluster_rows=FALSE,scale="none",
fontsize_row=12,fontsize_col=12,angle_col=45,border_color="grey87",
color = brewer.pal(n = 4, name = "YlOrRd"), cellheight = 18)
coral_heatmap2 <- pheatmap(data_matrix,cluster_cols=FALSE,cluster_rows=FALSE,scale="none",
fontsize_row=12,fontsize_col=12,angle_col=45,border_color="grey87",
color = brewer.pal(n = 4, name = "YlOrRd"), cellheight = 20)
coral_heatmap2 <- pheatmap(data_matrix,cluster_cols=FALSE,cluster_rows=FALSE,scale="none",
fontsize_row=12,fontsize_col=12,angle_col=45,border_color="grey87",
color = brewer.pal(n = 4, name = "YlOrRd"), cellheight = 20,
annotation_row=rownames(data_matrix))
row_meta <- data.frame(data.matrix, row.names=1, header=TRUE)
row_meta <- rownames(data_matrix)
coral_heatmap2 <- pheatmap(data_matrix,cluster_cols=FALSE,cluster_rows=FALSE,scale="none",
fontsize_row=12,fontsize_col=12,angle_col=45,border_color="grey87",
color = brewer.pal(n = 4, name = "YlOrRd"), cellheight = 20,
annotation_row=row_meta)
coral_heatmap2 <- pheatmap(data_matrix,cluster_cols=FALSE,cluster_rows=FALSE,scale="none",
fontsize_row=12,fontsize_col=12,angle_col=45,border_color="grey87",
color = brewer.pal(n = 4, name = "YlOrRd"), cellheight = 20,
annotation_legend = TRUE)
coral_heatmap2 <- pheatmap(data_matrix,cluster_cols=FALSE,cluster_rows=FALSE,scale="none",
fontsize_row=12,fontsize_col=12,angle_col=45,border_color="grey87",
color = brewer.pal(n = 4, name = "YlOrRd"), cellheight = 20)
coral_heatmap <- pheatmap(data_matrix,cluster_cols=FALSE,cluster_rows=FALSE,scale="none",
fontsize_row=12,fontsize_col=12,angle_col=45,border_color="grey87",
color = colorRampPalette(c("navy", "green", "red"))(50), cellheight = 20)
coral_heatmap <- pheatmap(data_matrix,cluster_cols=FALSE,cluster_rows=FALSE,scale="none",
fontsize_row=12,fontsize_col=12,angle_col=45,border_color="grey87",
color = colorRampPalette(c("navy", "green","yellow","orange", "red"))(50), cellheight = 20)
coral_heatmap <- pheatmap(data_matrix,cluster_cols=FALSE,cluster_rows=FALSE,scale="none",
fontsize_row=12,fontsize_col=12,angle_col=45,border_color="grey87",
color = colorRampPalette(c("blue","yellow","orange", "red"))(50), cellheight = 20)
coral_heatmap <- pheatmap(data_matrix,cluster_cols=FALSE,cluster_rows=FALSE,scale="none",
fontsize_row=12,fontsize_col=12,angle_col=45,border_color="grey87",
color = colorRampPalette(c("blue","green","orange", "red"))(50), cellheight = 20)
coral_heatmap <- pheatmap(data_matrix,cluster_cols=FALSE,cluster_rows=FALSE,scale="none",
fontsize_row=12,fontsize_col=12,angle_col=45,border_color="grey87",
color = brewer.pal(n = 4, name = "YlOrRd"), cellheight = 20)
setwd("~/Documents/ODU_Post-doc/Writing/Gradient_physiology/Gradient-physiology/Figures/Figure 4")
#Heatmap
library(pheatmap)
library(RColorBrewer)
heatmap_data<-read.csv("Coral_heatmap.csv")
data_matrix <- data.matrix(heatmap_data[,2:7])
rownames(data_matrix) = sapply(heatmap_data$Coral.species,function(x) strsplit(as.character(x),split = "\\\\")[[1]][1])
coral_heatmap <- pheatmap(data_matrix,cluster_cols=FALSE,cluster_rows=FALSE,scale="none",
fontsize_row=12,fontsize_col=12,angle_col=45,border_color="grey87",
color = brewer.pal(n = 4, name = "YlOrRd"), cellheight = 20)
#END
coral_heatmap <- pheatmap(data_matrix,cluster_cols=FALSE,cluster_rows=FALSE,scale="none",
fontsize_row=12,fontsize_col=12,angle_col=45,border_color="grey87",
color = brewer.pal(n = 4, name = "YlOrRd"), cellheight = 30)
coral_heatmap <- pheatmap(data_matrix,cluster_cols=FALSE,cluster_rows=FALSE,scale="none",
fontsize_row=12,fontsize_col=12,angle_col=45,border_color="grey87",
color = brewer.pal(n = 4, name = "YlOrRd"), cellheight = 50)
setwd("~/Documents/ODU_Post-doc/Writing/Evensen et al. (2021) Coral Reefs/Gradient-physiology/Figures/Figure 4")
#setwd to source file location
#Heatmap
library(pheatmap)
library(RColorBrewer)
heatmap_data<-read.csv("Coral_heatmap.csv") #Numbers indicate rank of coral species at each site (see Fig. 3b)
data_matrix <- data.matrix(heatmap_data[,2:7])
rownames(data_matrix) = sapply(heatmap_data$Coral.species,function(x) strsplit(as.character(x),split = "\\\\")[[1]][1])
coral_heatmap <- pheatmap(data_matrix,cluster_cols=FALSE,cluster_rows=FALSE,scale="none",
fontsize_row=12,fontsize_col=12,angle_col=45,border_color="grey87",
color = rev(brewer.pal(n = 4, name = "Purples")), cellheight = 50)
#END
coral_heatmap <- pheatmap(data_matrix,cluster_cols=FALSE,cluster_rows=FALSE,scale="none",
fontsize_row=12,fontsize_col=12,angle_col=45,border_color="grey87",
color = brewer.pal(n = 4, name = "Purples"), cellheight = 50)
#Heatmap
library(pheatmap)
library(RColorBrewer)
heatmap_data<-read.csv("Coral_heatmap.csv") #Numbers indicate rank of coral species at each site (see Fig. 3b)
data_matrix <- data.matrix(heatmap_data[,2:7])
rownames(data_matrix) = sapply(heatmap_data$Coral.species,function(x) strsplit(as.character(x),split = "\\\\")[[1]][1])
coral_heatmap <- pheatmap(data_matrix,cluster_cols=FALSE,cluster_rows=FALSE,scale="none",
fontsize_row=12,fontsize_col=12,angle_col=45,border_color="grey87",
color = brewer.pal(n = 4, name = "Purples"), cellheight = 50)
#END
