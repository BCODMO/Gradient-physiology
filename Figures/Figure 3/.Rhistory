plot(Poc_Kaust)
Poc_Eilat_genocoeffs_50<-data.frame(ED(Poc_Eilat, c(50)))
Poc_Eilat_coeff_mean<-mean(Poc_Eilat_genocoeffs_50$Estimate)
Poc_Eilat_coeff_mean
Poc_Eilat_summary<-data.frame(CI(Poc_Eilat_genocoeffs_50$Estimate, ci=0.95))
Poc_Eilat_coeff_lower<-Poc_Eilat_summary[3,]
Poc_Eilat_coeff_upper<-Poc_Eilat_summary[1,]
Poc_AlWajh_genocoeffs_50<-data.frame(ED(Poc_AlWajh, c(50)))
Poc_AlWajh_coeff_mean<-mean(Poc_AlWajh_genocoeffs_50$Estimate)
Poc_AlWajh_coeff_mean
Poc_AlWajh_summary<-data.frame(CI(Poc_AlWajh_genocoeffs_50$Estimate, ci=0.95))
Poc_AlWajh_coeff_lower<-Poc_AlWajh_summary[3,]
Poc_AlWajh_coeff_upper<-Poc_AlWajh_summary[1,]
Poc_Yanbu_genocoeffs_50<-data.frame(ED(Poc_Yanbu, c(50)))
Poc_Yanbu_coeff_mean<-mean(Poc_Yanbu_genocoeffs_50$Estimate)
Poc_Yanbu_coeff_mean
Poc_Yanbu_summary<-data.frame(CI(Poc_Yanbu_genocoeffs_50$Estimate, ci=0.95))
Poc_Yanbu_coeff_lower<-Poc_Yanbu_summary[3,]
Poc_Yanbu_coeff_upper<-Poc_Yanbu_summary[1,]
Poc_Kaust_genocoeffs_50<-data.frame(ED(Poc_Kaust, c(50)))
Poc_Kaust_coeff_mean<-mean(Poc_Kaust_genocoeffs_50$Estimate)
Poc_Kaust_coeff_mean
Poc_Kaust_summary<-data.frame(CI(Poc_Kaust_genocoeffs_50$Estimate, ci=0.95))
Poc_Kaust_coeff_lower<-Poc_Kaust_summary[3,]
Poc_Kaust_coeff_upper<-Poc_Kaust_summary[1,]
Poc_Obock <- drm(Median ~ Temp, data = Poc_data[Poc_data$Site=="Obock",], curveid=Geno, fct = LL.3())
Poc_Kaust <- drm(Median ~ Temp, data = Poc_data[Poc_data$Site=="AlFahal",], curveid=Geno, fct = LL.3())
Poc_Kaust_genocoeffs_50<-data.frame(ED(Poc_Kaust, c(50)))
Poc_Kaust_coeff_mean<-mean(Poc_Kaust_genocoeffs_50$Estimate)
Poc_Kaust_coeff_mean
Poc_Kaust_summary<-data.frame(CI(Poc_Kaust_genocoeffs_50$Estimate, ci=0.95))
Poc_Kaust_coeff_lower<-Poc_Kaust_summary[3,]
Poc_Kaust_coeff_upper<-Poc_Kaust_summary[1,]
Poc_Kaust1 <- drm(Median ~ Temp, data = Poc_data[Poc_data$Site=="AlFahal",], fct = LL.3())
Poc_Kaust_genocoeffs_50<-data.frame(ED(Poc_Kaust, c(50)))
Poc_Kaust_coeff_mean<-mean(Poc_Kaust_genocoeffs_50$Estimate)
Poc_Kaust_coeff_mean
Poc_Kaust_summary<-data.frame(CI(Poc_Kaust_genocoeffs_50$Estimate, ci=0.95))
Poc_Kaust_coeff_lower<-Poc_Kaust_summary[3,]
Poc_Kaust_coeff_upper<-Poc_Kaust_summary[1,]
Poc_Obock <- drm(Median ~ Temp, data = Poc_data[Poc_data$Site=="Obock",], curveid=Geno, fct = LL.3())
summary(Poc_Obock)
plot(Poc_Obock)
Poc_Obock1 <- drm(Median ~ Temp, data = Poc_data[Poc_data$Site=="Obock",], fct = LL.3())
Poc_Obock_genocoeffs_50<-data.frame(ED(Poc_Obock, c(50)))
Poc_Obock_coeff_mean<-mean(Poc_Obock_genocoeffs_50$Estimate)
Poc_Obock_coeff_mean
Poc_Obock_summary<-data.frame(CI(Poc_Obock_genocoeffs_50$Estimate, ci=0.95))
Poc_Obock_coeff_lower<-Poc_Obock_summary[3,]
Poc_Obock_coeff_upper<-Poc_Obock_summary[1,]
Geno_ED50s <- data.frame(cbind(Poc_Obock_genocoeffs_50[,1],Poc_Eilat_genocoeffs_50[,1],Poc_AlWajh_genocoeffs_50[,1],
Poc_Yanbu_genocoeffs_50[,1], Poc_Kaust_genocoeffs_50[,1]))
GenoED_50s<-Geno_ED50s %>%
rename(Obock= X1,
Eilat=X2,
AlWajh=X3,
Yanbu=X4,
Kaust=X5)
GenoED_50s$Geno<-as.factor(1:nrow(GenoED_50s))
str(GenoED_50s)
Geno_ED50s_long<-melt(GenoED_50s, id="Geno")
Poc_Geno_ED50s_long<-Geno_ED50s_long %>%
rename(Site= variable,
ED50=value)
Poc_ED50_mod<-aov(ED50 ~ Site, Poc_Geno_ED50s_long)
summary(Poc_ED50_mod)
TukeyHSD(Poc_ED50_mod)
Poc_coeff_means<-data.frame(Poc_AlWajh_coeff_mean, Poc_Eilat_coeff_mean, Poc_Kaust_coeff_mean, Poc_Obock_coeff_mean, Poc_Yanbu_coeff_mean)
Poc_coeff_lowers<-data.frame(Poc_AlWajh_coeff_lower, Poc_Eilat_coeff_lower, Poc_Kaust_coeff_lower, Poc_Obock_coeff_lower, Poc_Yanbu_coeff_lower)
Poc_coeff_uppers<-data.frame(Poc_AlWajh_coeff_upper, Poc_Eilat_coeff_upper, Poc_Kaust_coeff_upper, Poc_Obock_coeff_upper, Poc_Yanbu_coeff_upper)
Poc_AlWajh_preddata = data.frame(temp = seq(30,39, length.out = 100))
Poc_AlWajh_pred = as.data.frame(predict(Poc_AlWajh, newdata = Poc_AlWajh_preddata, interval = 'confidence'))
Poc_AlWajh_preddata = data.frame(Poc_AlWajh_preddata, fvfm = Poc_AlWajh_pred$Prediction, Lower = Poc_AlWajh_pred$Lower, Upper = Poc_AlWajh_pred$Upper)
Poc_Eilat_preddata = data.frame(temp = seq(30,39, length.out = 100))
Poc_Eilat_pred = as.data.frame(predict(Poc_Eilat, newdata = Poc_Eilat_preddata, interval = 'confidence'))
Poc_Eilat_preddata = data.frame(Poc_Eilat_preddata, fvfm = Poc_Eilat_pred$Prediction, Lower = Poc_Eilat_pred$Lower, Upper = Poc_Eilat_pred$Upper)
Poc_Kaust_preddata = data.frame(temp = seq(30,39, length.out = 100))
Poc_Kaust_pred = as.data.frame(predict(Poc_Kaust, newdata = Poc_Kaust_preddata, interval = 'confidence'))
Poc_Kaust_preddata = data.frame(Poc_Kaust_preddata, fvfm = Poc_Kaust_pred$Prediction, Lower = Poc_Kaust_pred$Lower, Upper = Poc_Kaust_pred$Upper)
Poc_Obock_preddata = data.frame(temp = seq(30,39, length.out = 100))
Poc_Obock_pred = as.data.frame(predict(Poc_Obock, newdata = Poc_Obock_preddata, interval = 'confidence'))
Poc_Obock_preddata = data.frame(Poc_Obock_preddata, fvfm = Poc_Obock_pred$Prediction, Lower = Poc_Obock_pred$Lower, Upper = Poc_Obock_pred$Upper)
Poc_Yanbu_preddata = data.frame(temp = seq(30,39, length.out = 100))
Poc_Yanbu_pred = as.data.frame(predict(Poc_Yanbu, newdata = Poc_Yanbu_preddata, interval = 'confidence'))
Poc_Yanbu_preddata = data.frame(Poc_Yanbu_preddata, fvfm = Poc_Yanbu_pred$Prediction, Lower = Poc_Yanbu_pred$Lower, Upper = Poc_Yanbu_pred$Upper)
Poc_plot<- ggplot() +
geom_jitter(data = Poc_data, aes(x = Temp, y = Median, color = Site), size = 1, width = 0.25) +
scale_x_continuous(limits=c(29,40), breaks=c(30,32,34,36,38)) +
scale_y_continuous(limits=c(-5, 125), breaks=c(0, 20, 40, 60, 80, 100)) +
geom_line(data = Poc_Eilat_preddata, aes(x = temp, y = fvfm), color = 'royalblue2', show.legend = FALSE) +
geom_ribbon(data = Poc_Eilat_preddata, aes(x = temp, ymin=Lower, ymax=Upper), color = 'royalblue2', linetype=2, alpha = 0.2) +
geom_vline(data = Poc_coeff_means, aes(xintercept = Poc_Eilat_coeff_mean), color = 'royalblue2', show.legend = FALSE) +
annotate("rect", xmin=Poc_coeff_lowers$Poc_Eilat_coeff_lower, xmax=Poc_coeff_uppers$Poc_Eilat_coeff_upper, ymin=-Inf, ymax=Inf, fill= 'royalblue2',  alpha = 0.1) +
geom_text(data = Poc_coeff_means, aes(label = Poc_Eilat_coeff_mean), x = 31, y = 0.3, show.legend = FALSE, color = 'royalblue2') +
geom_line(data = Poc_AlWajh_preddata, aes(x = temp, y = fvfm), color = 'darkgoldenrod1', show.legend = FALSE) +
geom_ribbon(data = Poc_AlWajh_preddata, aes(x = temp, ymin=Lower, ymax=Upper), color = 'darkgoldenrod1', linetype=2, alpha = 0.2) +
geom_vline(data = Poc_coeff_means, aes(xintercept = Poc_AlWajh_coeff_mean), color = 'darkgoldenrod1', show.legend = FALSE) +
annotate("rect", xmin=Poc_coeff_lowers$Poc_AlWajh_coeff_lower, xmax=Poc_coeff_uppers$Poc_AlWajh_coeff_upper, ymin=-Inf, ymax=Inf, fill= 'darkgoldenrod1',  alpha = 0.1) +
geom_text(data = Poc_coeff_means, aes(label = Poc_AlWajh_coeff_mean), x = 31, y = 0.25, show.legend = FALSE, color = 'darkgoldenrod1') +
geom_line(data = Poc_Yanbu_preddata, aes(x = temp, y = fvfm), color = 'darkorange1', show.legend = FALSE) +
geom_ribbon(data = Poc_Yanbu_preddata, aes(x = temp, ymin=Lower, ymax=Upper), color = 'darkorange1', linetype=2, alpha = 0.2) +
geom_vline(data = Poc_coeff_means, aes(xintercept = Poc_Yanbu_coeff_mean), color = 'darkorange1', show.legend = FALSE) +
annotate("rect", xmin=Poc_coeff_lowers$Poc_Yanbu_coeff_lower, xmax=Poc_coeff_uppers$Poc_Yanbu_coeff_upper, ymin=-Inf, ymax=Inf, fill= 'darkorange1',  alpha = 0.1) +
geom_text(data = Poc_coeff_means, aes(label = Poc_Yanbu_coeff_mean), x = 31, y = 0.20, show.legend = FALSE, color = 'darkorange1') +
geom_line(data = Poc_Kaust_preddata, aes(x = temp, y = fvfm), color = 'red3', show.legend = FALSE) +
geom_ribbon(data = Poc_Kaust_preddata, aes(x = temp, ymin=Lower, ymax=Upper), color = 'red3', linetype=2, alpha = 0.2) +
geom_vline(data = Poc_coeff_means, aes(xintercept = Poc_Kaust_coeff_mean), color = 'red3', show.legend = FALSE) +
annotate("rect", xmin=Poc_coeff_lowers$Poc_Kaust_coeff_lower, xmax=Poc_coeff_uppers$Poc_Kaust_coeff_upper, ymin=-Inf, ymax=Inf, fill= 'red3',  alpha = 0.1) +
geom_text(data = Poc_coeff_means, aes(label = Poc_Kaust_coeff_mean), x = 31, y = 0.15, show.legend = FALSE, color = 'red3') +
geom_line(data = Poc_Obock_preddata, aes(x = temp, y = fvfm), color = 'springgreen1', show.legend = FALSE) +
geom_ribbon(data = Poc_Obock_preddata, aes(x = temp, ymin=Lower, ymax=Upper), color = 'springgreen1', linetype=2, alpha = 0.2) +
geom_vline(data = Poc_coeff_means, aes(xintercept = Poc_Obock_coeff_mean), color = 'springgreen1', show.legend = FALSE) +
annotate("rect", xmin=Poc_coeff_lowers$Poc_Obock_coeff_lower, xmax=Poc_coeff_uppers$Poc_Obock_coeff_upper, ymin=-Inf, ymax=Inf, fill= 'springgreen1',  alpha = 0.1) +
geom_text(data = Poc_coeff_means, aes(label = Poc_Obock_coeff_mean), x = 31, y = 0.05, show.legend = FALSE, color = 'springgreen1') +
ggtitle("Pocillopora") +
scale_color_manual(values=c("royalblue2", "darkgoldenrod1", "darkorange1", "red3", "springgreen1")) +
ylab("Fv/Fm") +
xlab("Temperature (Â°C)") +
theme_bw()
Poc_plot
View(Poc_Kaust_preddata)
Poc_plot<- ggplot() +
geom_jitter(data = Poc_data, aes(x = Temp, y = Median, color = Site), size = 1, width = 0.25) +
scale_x_continuous(limits=c(29,40), breaks=c(30,32,34,36,38)) +
scale_y_continuous(limits=c(-275, 325), breaks=c(0, 20, 40, 60, 80, 100)) +
geom_line(data = Poc_Eilat_preddata, aes(x = temp, y = fvfm), color = 'royalblue2', show.legend = FALSE) +
geom_ribbon(data = Poc_Eilat_preddata, aes(x = temp, ymin=Lower, ymax=Upper), color = 'royalblue2', linetype=2, alpha = 0.2) +
geom_vline(data = Poc_coeff_means, aes(xintercept = Poc_Eilat_coeff_mean), color = 'royalblue2', show.legend = FALSE) +
annotate("rect", xmin=Poc_coeff_lowers$Poc_Eilat_coeff_lower, xmax=Poc_coeff_uppers$Poc_Eilat_coeff_upper, ymin=-Inf, ymax=Inf, fill= 'royalblue2',  alpha = 0.1) +
geom_text(data = Poc_coeff_means, aes(label = Poc_Eilat_coeff_mean), x = 31, y = 0.3, show.legend = FALSE, color = 'royalblue2') +
geom_line(data = Poc_AlWajh_preddata, aes(x = temp, y = fvfm), color = 'darkgoldenrod1', show.legend = FALSE) +
geom_ribbon(data = Poc_AlWajh_preddata, aes(x = temp, ymin=Lower, ymax=Upper), color = 'darkgoldenrod1', linetype=2, alpha = 0.2) +
geom_vline(data = Poc_coeff_means, aes(xintercept = Poc_AlWajh_coeff_mean), color = 'darkgoldenrod1', show.legend = FALSE) +
annotate("rect", xmin=Poc_coeff_lowers$Poc_AlWajh_coeff_lower, xmax=Poc_coeff_uppers$Poc_AlWajh_coeff_upper, ymin=-Inf, ymax=Inf, fill= 'darkgoldenrod1',  alpha = 0.1) +
geom_text(data = Poc_coeff_means, aes(label = Poc_AlWajh_coeff_mean), x = 31, y = 0.25, show.legend = FALSE, color = 'darkgoldenrod1') +
geom_line(data = Poc_Yanbu_preddata, aes(x = temp, y = fvfm), color = 'darkorange1', show.legend = FALSE) +
geom_ribbon(data = Poc_Yanbu_preddata, aes(x = temp, ymin=Lower, ymax=Upper), color = 'darkorange1', linetype=2, alpha = 0.2) +
geom_vline(data = Poc_coeff_means, aes(xintercept = Poc_Yanbu_coeff_mean), color = 'darkorange1', show.legend = FALSE) +
annotate("rect", xmin=Poc_coeff_lowers$Poc_Yanbu_coeff_lower, xmax=Poc_coeff_uppers$Poc_Yanbu_coeff_upper, ymin=-Inf, ymax=Inf, fill= 'darkorange1',  alpha = 0.1) +
geom_text(data = Poc_coeff_means, aes(label = Poc_Yanbu_coeff_mean), x = 31, y = 0.20, show.legend = FALSE, color = 'darkorange1') +
geom_line(data = Poc_Kaust_preddata, aes(x = temp, y = fvfm), color = 'red3', show.legend = FALSE) +
geom_ribbon(data = Poc_Kaust_preddata, aes(x = temp, ymin=Lower, ymax=Upper), color = 'red3', linetype=2, alpha = 0.2) +
geom_vline(data = Poc_coeff_means, aes(xintercept = Poc_Kaust_coeff_mean), color = 'red3', show.legend = FALSE) +
annotate("rect", xmin=Poc_coeff_lowers$Poc_Kaust_coeff_lower, xmax=Poc_coeff_uppers$Poc_Kaust_coeff_upper, ymin=-Inf, ymax=Inf, fill= 'red3',  alpha = 0.1) +
geom_text(data = Poc_coeff_means, aes(label = Poc_Kaust_coeff_mean), x = 31, y = 0.15, show.legend = FALSE, color = 'red3') +
geom_line(data = Poc_Obock_preddata, aes(x = temp, y = fvfm), color = 'springgreen1', show.legend = FALSE) +
geom_ribbon(data = Poc_Obock_preddata, aes(x = temp, ymin=Lower, ymax=Upper), color = 'springgreen1', linetype=2, alpha = 0.2) +
geom_vline(data = Poc_coeff_means, aes(xintercept = Poc_Obock_coeff_mean), color = 'springgreen1', show.legend = FALSE) +
annotate("rect", xmin=Poc_coeff_lowers$Poc_Obock_coeff_lower, xmax=Poc_coeff_uppers$Poc_Obock_coeff_upper, ymin=-Inf, ymax=Inf, fill= 'springgreen1',  alpha = 0.1) +
geom_text(data = Poc_coeff_means, aes(label = Poc_Obock_coeff_mean), x = 31, y = 0.05, show.legend = FALSE, color = 'springgreen1') +
ggtitle("Pocillopora") +
scale_color_manual(values=c("royalblue2", "darkgoldenrod1", "darkorange1", "red3", "springgreen1")) +
ylab("Fv/Fm") +
xlab("Temperature (Â°C)") +
theme_bw()
Poc_plot
Poc_AlWajh_preddata = data.frame(temp = seq(30,39, length.out = 100))
Poc_AlWajh_pred = as.data.frame(predict(Poc_AlWajh1, newdata = Poc_AlWajh_preddata, interval = 'confidence'))
Poc_AlWajh_preddata = data.frame(Poc_AlWajh_preddata, fvfm = Poc_AlWajh_pred$Prediction, Lower = Poc_AlWajh_pred$Lower, Upper = Poc_AlWajh_pred$Upper)
Poc_Eilat_preddata = data.frame(temp = seq(30,39, length.out = 100))
Poc_Eilat_pred = as.data.frame(predict(Poc_Eilat1, newdata = Poc_Eilat_preddata, interval = 'confidence'))
Poc_Eilat_preddata = data.frame(Poc_Eilat_preddata, fvfm = Poc_Eilat_pred$Prediction, Lower = Poc_Eilat_pred$Lower, Upper = Poc_Eilat_pred$Upper)
Poc_Kaust_preddata = data.frame(temp = seq(30,39, length.out = 100))
Poc_Kaust_pred = as.data.frame(predict(Poc_Kaust1, newdata = Poc_Kaust_preddata, interval = 'confidence'))
Poc_Kaust_preddata = data.frame(Poc_Kaust_preddata, fvfm = Poc_Kaust_pred$Prediction, Lower = Poc_Kaust_pred$Lower, Upper = Poc_Kaust_pred$Upper)
Poc_Obock_preddata = data.frame(temp = seq(30,39, length.out = 100))
Poc_Obock_pred = as.data.frame(predict(Poc_Obock1, newdata = Poc_Obock_preddata, interval = 'confidence'))
Poc_Obock_preddata = data.frame(Poc_Obock_preddata, fvfm = Poc_Obock_pred$Prediction, Lower = Poc_Obock_pred$Lower, Upper = Poc_Obock_pred$Upper)
Poc_Yanbu_preddata = data.frame(temp = seq(30,39, length.out = 100))
Poc_Yanbu_pred = as.data.frame(predict(Poc_Yanbu1, newdata = Poc_Yanbu_preddata, interval = 'confidence'))
Poc_Yanbu_preddata = data.frame(Poc_Yanbu_preddata, fvfm = Poc_Yanbu_pred$Prediction, Lower = Poc_Yanbu_pred$Lower, Upper = Poc_Yanbu_pred$Upper)
#### PLOT Pocillopora ####
Poc_data$Temp<-as.character(Poc_data$Temp)
Poc_data$Temp<-as.numeric(Poc_data$Temp)
Poc_plot<- ggplot() +
geom_jitter(data = Poc_data, aes(x = Temp, y = Median, color = Site), size = 1, width = 0.25) +
scale_x_continuous(limits=c(29,40), breaks=c(30,32,34,36,38)) +
scale_y_continuous(limits=c(-5, 125), breaks=c(0, 20, 40, 60, 80, 100)) +
geom_line(data = Poc_Eilat_preddata, aes(x = temp, y = fvfm), color = 'royalblue2', show.legend = FALSE) +
geom_ribbon(data = Poc_Eilat_preddata, aes(x = temp, ymin=Lower, ymax=Upper), color = 'royalblue2', linetype=2, alpha = 0.2) +
geom_vline(data = Poc_coeff_means, aes(xintercept = Poc_Eilat_coeff_mean), color = 'royalblue2', show.legend = FALSE) +
annotate("rect", xmin=Poc_coeff_lowers$Poc_Eilat_coeff_lower, xmax=Poc_coeff_uppers$Poc_Eilat_coeff_upper, ymin=-Inf, ymax=Inf, fill= 'royalblue2',  alpha = 0.1) +
geom_text(data = Poc_coeff_means, aes(label = Poc_Eilat_coeff_mean), x = 31, y = 0.3, show.legend = FALSE, color = 'royalblue2') +
geom_line(data = Poc_AlWajh_preddata, aes(x = temp, y = fvfm), color = 'darkgoldenrod1', show.legend = FALSE) +
geom_ribbon(data = Poc_AlWajh_preddata, aes(x = temp, ymin=Lower, ymax=Upper), color = 'darkgoldenrod1', linetype=2, alpha = 0.2) +
geom_vline(data = Poc_coeff_means, aes(xintercept = Poc_AlWajh_coeff_mean), color = 'darkgoldenrod1', show.legend = FALSE) +
annotate("rect", xmin=Poc_coeff_lowers$Poc_AlWajh_coeff_lower, xmax=Poc_coeff_uppers$Poc_AlWajh_coeff_upper, ymin=-Inf, ymax=Inf, fill= 'darkgoldenrod1',  alpha = 0.1) +
geom_text(data = Poc_coeff_means, aes(label = Poc_AlWajh_coeff_mean), x = 31, y = 0.25, show.legend = FALSE, color = 'darkgoldenrod1') +
geom_line(data = Poc_Yanbu_preddata, aes(x = temp, y = fvfm), color = 'darkorange1', show.legend = FALSE) +
geom_ribbon(data = Poc_Yanbu_preddata, aes(x = temp, ymin=Lower, ymax=Upper), color = 'darkorange1', linetype=2, alpha = 0.2) +
geom_vline(data = Poc_coeff_means, aes(xintercept = Poc_Yanbu_coeff_mean), color = 'darkorange1', show.legend = FALSE) +
annotate("rect", xmin=Poc_coeff_lowers$Poc_Yanbu_coeff_lower, xmax=Poc_coeff_uppers$Poc_Yanbu_coeff_upper, ymin=-Inf, ymax=Inf, fill= 'darkorange1',  alpha = 0.1) +
geom_text(data = Poc_coeff_means, aes(label = Poc_Yanbu_coeff_mean), x = 31, y = 0.20, show.legend = FALSE, color = 'darkorange1') +
geom_line(data = Poc_Kaust_preddata, aes(x = temp, y = fvfm), color = 'red3', show.legend = FALSE) +
geom_ribbon(data = Poc_Kaust_preddata, aes(x = temp, ymin=Lower, ymax=Upper), color = 'red3', linetype=2, alpha = 0.2) +
geom_vline(data = Poc_coeff_means, aes(xintercept = Poc_Kaust_coeff_mean), color = 'red3', show.legend = FALSE) +
annotate("rect", xmin=Poc_coeff_lowers$Poc_Kaust_coeff_lower, xmax=Poc_coeff_uppers$Poc_Kaust_coeff_upper, ymin=-Inf, ymax=Inf, fill= 'red3',  alpha = 0.1) +
geom_text(data = Poc_coeff_means, aes(label = Poc_Kaust_coeff_mean), x = 31, y = 0.15, show.legend = FALSE, color = 'red3') +
geom_line(data = Poc_Obock_preddata, aes(x = temp, y = fvfm), color = 'springgreen1', show.legend = FALSE) +
geom_ribbon(data = Poc_Obock_preddata, aes(x = temp, ymin=Lower, ymax=Upper), color = 'springgreen1', linetype=2, alpha = 0.2) +
geom_vline(data = Poc_coeff_means, aes(xintercept = Poc_Obock_coeff_mean), color = 'springgreen1', show.legend = FALSE) +
annotate("rect", xmin=Poc_coeff_lowers$Poc_Obock_coeff_lower, xmax=Poc_coeff_uppers$Poc_Obock_coeff_upper, ymin=-Inf, ymax=Inf, fill= 'springgreen1',  alpha = 0.1) +
geom_text(data = Poc_coeff_means, aes(label = Poc_Obock_coeff_mean), x = 31, y = 0.05, show.legend = FALSE, color = 'springgreen1') +
ggtitle("Pocillopora") +
scale_color_manual(values=c("royalblue2", "darkgoldenrod1", "darkorange1", "red3", "springgreen1")) +
ylab("Fv/Fm") +
xlab("Temperature (Â°C)") +
theme_bw()
Poc_plot
View(Poc_Yanbu_preddata)
Poc_plot<- ggplot() +
geom_jitter(data = Poc_data, aes(x = Temp, y = Median, color = Site), size = 1, width = 0.25) +
scale_x_continuous(limits=c(29,40), breaks=c(30,32,34,36,38)) +
scale_y_continuous(limits=c(-60, 151), breaks=c(0, 20, 40, 60, 80, 100)) +
geom_line(data = Poc_Eilat_preddata, aes(x = temp, y = fvfm), color = 'royalblue2', show.legend = FALSE) +
geom_ribbon(data = Poc_Eilat_preddata, aes(x = temp, ymin=Lower, ymax=Upper), color = 'royalblue2', linetype=2, alpha = 0.2) +
geom_vline(data = Poc_coeff_means, aes(xintercept = Poc_Eilat_coeff_mean), color = 'royalblue2', show.legend = FALSE) +
annotate("rect", xmin=Poc_coeff_lowers$Poc_Eilat_coeff_lower, xmax=Poc_coeff_uppers$Poc_Eilat_coeff_upper, ymin=-Inf, ymax=Inf, fill= 'royalblue2',  alpha = 0.1) +
geom_text(data = Poc_coeff_means, aes(label = Poc_Eilat_coeff_mean), x = 31, y = 0.3, show.legend = FALSE, color = 'royalblue2') +
geom_line(data = Poc_AlWajh_preddata, aes(x = temp, y = fvfm), color = 'darkgoldenrod1', show.legend = FALSE) +
geom_ribbon(data = Poc_AlWajh_preddata, aes(x = temp, ymin=Lower, ymax=Upper), color = 'darkgoldenrod1', linetype=2, alpha = 0.2) +
geom_vline(data = Poc_coeff_means, aes(xintercept = Poc_AlWajh_coeff_mean), color = 'darkgoldenrod1', show.legend = FALSE) +
annotate("rect", xmin=Poc_coeff_lowers$Poc_AlWajh_coeff_lower, xmax=Poc_coeff_uppers$Poc_AlWajh_coeff_upper, ymin=-Inf, ymax=Inf, fill= 'darkgoldenrod1',  alpha = 0.1) +
geom_text(data = Poc_coeff_means, aes(label = Poc_AlWajh_coeff_mean), x = 31, y = 0.25, show.legend = FALSE, color = 'darkgoldenrod1') +
geom_line(data = Poc_Yanbu_preddata, aes(x = temp, y = fvfm), color = 'darkorange1', show.legend = FALSE) +
geom_ribbon(data = Poc_Yanbu_preddata, aes(x = temp, ymin=Lower, ymax=Upper), color = 'darkorange1', linetype=2, alpha = 0.2) +
geom_vline(data = Poc_coeff_means, aes(xintercept = Poc_Yanbu_coeff_mean), color = 'darkorange1', show.legend = FALSE) +
annotate("rect", xmin=Poc_coeff_lowers$Poc_Yanbu_coeff_lower, xmax=Poc_coeff_uppers$Poc_Yanbu_coeff_upper, ymin=-Inf, ymax=Inf, fill= 'darkorange1',  alpha = 0.1) +
geom_text(data = Poc_coeff_means, aes(label = Poc_Yanbu_coeff_mean), x = 31, y = 0.20, show.legend = FALSE, color = 'darkorange1') +
geom_line(data = Poc_Kaust_preddata, aes(x = temp, y = fvfm), color = 'red3', show.legend = FALSE) +
geom_ribbon(data = Poc_Kaust_preddata, aes(x = temp, ymin=Lower, ymax=Upper), color = 'red3', linetype=2, alpha = 0.2) +
geom_vline(data = Poc_coeff_means, aes(xintercept = Poc_Kaust_coeff_mean), color = 'red3', show.legend = FALSE) +
annotate("rect", xmin=Poc_coeff_lowers$Poc_Kaust_coeff_lower, xmax=Poc_coeff_uppers$Poc_Kaust_coeff_upper, ymin=-Inf, ymax=Inf, fill= 'red3',  alpha = 0.1) +
geom_text(data = Poc_coeff_means, aes(label = Poc_Kaust_coeff_mean), x = 31, y = 0.15, show.legend = FALSE, color = 'red3') +
geom_line(data = Poc_Obock_preddata, aes(x = temp, y = fvfm), color = 'springgreen1', show.legend = FALSE) +
geom_ribbon(data = Poc_Obock_preddata, aes(x = temp, ymin=Lower, ymax=Upper), color = 'springgreen1', linetype=2, alpha = 0.2) +
geom_vline(data = Poc_coeff_means, aes(xintercept = Poc_Obock_coeff_mean), color = 'springgreen1', show.legend = FALSE) +
annotate("rect", xmin=Poc_coeff_lowers$Poc_Obock_coeff_lower, xmax=Poc_coeff_uppers$Poc_Obock_coeff_upper, ymin=-Inf, ymax=Inf, fill= 'springgreen1',  alpha = 0.1) +
geom_text(data = Poc_coeff_means, aes(label = Poc_Obock_coeff_mean), x = 31, y = 0.05, show.legend = FALSE, color = 'springgreen1') +
ggtitle("Pocillopora") +
scale_color_manual(values=c("royalblue2", "darkgoldenrod1", "darkorange1", "red3", "springgreen1")) +
ylab("Fv/Fm") +
xlab("Temperature (Â°C)") +
theme_bw()
Poc_plot
ggsave(Poc_plot, height = 7 , width = 8, filename = "Pocillopora_gradient_Vis_bleaching_DRCs.pdf")
Sty_Eilat <- drm(PAM ~ Temp, data = Sty_data[Sty_data$Site=="Eilat",], curveid=Geno, fct = LL.3())
library(lmerTest)
library(emmeans)
library(sjPlot)
library(drc)
library(Rmisc)
library(ggplot2)
library(tidyr)
library(dplyr)
library(plyr)
library(reshape2)
Sty_Eilat <- drm(PAM ~ Temp, data = Sty_data[Sty_data$Site=="Eilat",], curveid=Geno, fct = LL.3())
Sty_data<-read.delim("PAM_example_data_file.txt")
PAM_example_data_file <- read.delim("~/Rscripts/PAM_example_data_file.txt")
View(PAM_example_data_file)
install.packages("dblm")
library(dblm)
library(corrplot)
library(mctest)
library(nlme)
library(lme4)
library(Hmisc)
library(dplyr)
New_communities <- read.csv("~/Documents/UQ Files/Palau II/Experiment 1/New_communities.csv")
View(New_communities)
New_communities1<-subset(New_communities, Timepoint!="0")
dataIR<-transform(New_communities1,
Plot_treatment=as.factor(Plot_treatment),
Tile_treatment=as.factor(Tile_treatment),
Location=as.factor(Location),
Timepoint=as.factor(Timepoint))
## average data set for ordination
library(plyr)
dataIR_AV<-ddply(dataIR, .(Plot_treatment,Tile_treatment,Location,Timepoint),summarize,
Bare=mean(Bare),
CCA=mean(CCA),
Cyanobacteria=mean(Cyanobacteria),
EAM=mean(EAM),
Inverts=mean(Inverts),
Lobophora=mean(Lobophora),
Long_turf=mean(Long_turf),
Macroalgae=mean(Macroalgae),
NCCA=mean(NCCA),
Sand=mean(Sand),
Thick_turf=mean(Thick_turf),
Turf=mean(Turf))
## Make two dataframes - one community, one metadata
library(dplyr)
dataIRAV_com<-select(dataIR_AV, Bare, CCA, Cyanobacteria, EAM, Inverts, Lobophora,
Long_turf, Macroalgae, NCCA, Sand, Turf, Thick_turf)
dataIRAV_meta<-select(dataIR_AV,Timepoint,Plot_treatment,Tile_treatment,Location)
library(vegan)
library(MASS)
Sol <- metaMDS(dataIRAV_com)
Sol
stressplot(Sol)
#Here - subset and plot crowns and crevices separately.
data.scores <- as.data.frame(scores(Sol))
new.data.scores <- cbind(data.scores,dataIRAV_meta)
new.data.scores[,"treatment"]<-as.character(NA)
new.data.scores$treatment[Name=(new.data.scores$Plot_treatment == "Normal") & (new.data.scores$Tile_treatment=="Open")]<-"Normal-Open"
new.data.scores$treatment[Name=(new.data.scores$Plot_treatment == "Normal") & (new.data.scores$Tile_treatment=="Caged")]<-"Normal-Caged"
new.data.scores$treatment[Name=(new.data.scores$Plot_treatment == "Normal") & (new.data.scores$Tile_treatment=="Partial")]<-"Normal-Partial"
new.data.scores$treatment[Name=(new.data.scores$Plot_treatment == "Nutrient") & (new.data.scores$Tile_treatment=="Open")]<-"Nutrient-Open"
new.data.scores$treatment[Name=(new.data.scores$Plot_treatment == "Nutrient") & (new.data.scores$Tile_treatment=="Caged")]<-"Nutrient-Caged"
new.data.scores$treatment[Name=(new.data.scores$Plot_treatment == "Nutrient") & (new.data.scores$Tile_treatment=="Partial")]<-"Nutrient-Partial"
Crown.data.scores<-subset(new.data.scores, Location=="Crown")
attach(Crown.data.scores)
Crevice.data.scores<-subset(new.data.scores, Location=="Crevice")
attach(Crevice.data.scores)
# plot with all treatments with lines joining the timepoints within a treatment and labels showing what timepoint each point is (colours represent treatments)
cols <- c("Normal-Caged" = "navy", "Normal-Partial" = "dodgerblue4", "Normal-Open" = "steelblue1",
"Nutrient-Caged" = "darkgreen", "Nutrient-Partial" = "palegreen4", "Nutrient-Open" = "palegreen3")
# 'navy','steelblue1','dodgerblue4','darkgreen','palegreen3','palegreen4'
library(ggplot2)
ggplot(Crevice.data.scores, aes(x = NMDS1, y = NMDS2, col=treatment, shape=treatment)) + scale_colour_manual(values=cols) +
geom_point(size=3) + scale_shape_manual(values=c(15, 17, 16, 15, 17, 16)) +
coord_fixed() + geom_text(aes(label=Timepoint),hjust=0, vjust=0) +
geom_segment(aes(xend=c(tail(NMDS1, n=-1), NA), yend=c(tail(NMDS2, n=-1), NA)), arrow=arrow(length=unit(0.3,"cm")), size=0.7) +
theme_bw() + theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank()) +
theme_classic() + theme(text = element_text(size=15, face="bold")) +
theme(axis.text = element_text(colour = "black")) + theme(panel.background = element_rect(colour = "black", size=1)) +
theme(axis.ticks.length=unit(.2,"cm")) + scale_x_continuous(limits=c(-1.2,1)) + scale_y_continuous(limits=c(-1,1))
library(MASS)
library(vegan)
ord_IR<-metaMDS(dataIRAV_com,distance = "bray",
k=2,trymax=1000,autotransform=TRUE,expand=FALSE, plot=FALSE)
ord_IR
fit<-envfit(ord_IR, dataIRAV_com, perm=999)
fit
scores(fit, "vectors")
plot(ord_IR,col="white")
plot(fit, p.max = 0.9, col = "black") + abline(h = 0, v = 0, col = "black", lty = 2) + scale_x_continuous(limits=c(-1.2,1)) + scale_y_continuous(limits=c(-1,1))
#Sort out 'y' - i.e. survival on each tile at each timepoint
Nov_2020_communities<- aggregate(.~ Timepoint + Plot_treatment + Tile + Tile_treatment, data=New_communities, mean)
warnings()
View(Nov_2020_communities)
Nov_2020_communities <-
New_communities %>%
group_by(Timepoint, Plot_treatment, Tile, Tile_treatment) %>%
summarise_each(funs(mean))
write.csv(Nov_2020_communities,"/Users/nicolasevensen//Users/nicolasevensen/Documents/UQ Files/Palau II/Experiment 1/Nov_2020_communities.csv", row.names = TRUE)
write.csv(Nov_2020_communities,"/Users/nicolasevensen/Users/nicolasevensen/Documents/UQ Files/Palau II/Experiment 1/Nov_2020_communities.csv", row.names = TRUE)
write.csv(Nov_2020_communities,"/Users/nicolasevensen/Documents/UQ Files/Palau II/Experiment 1/Nov_2020_communities.csv", row.names = TRUE)
remove(Nov_2020_communities)
Nov_2020_communities <- read.csv("~/Documents/UQ Files/Palau II/Experiment 1/Nov_2020_communities.csv")
View(Nov_2020_communities)
Nov_2020_survival <- read.csv("~/Documents/UQ Files/Palau II/Experiment 1/Nov_2020_survival.csv")
View(Nov_2020_survival)
Nov_2020_communities <- read.csv("~/Documents/UQ Files/Palau II/Experiment 1/Nov_2020_communities.csv")
View(Nov_2020_communities)
Nov_2020_microbes <- read.csv("~/Documents/UQ Files/Palau II/Experiment 1/Nov_2020_microbes.csv")
View(Nov_2020_microbes)
#Sort out macro and micro cover/abundance on each tile at each timepoint - make sure it matches 'y'
Nov_2020_survival1<-subset(Nov_2020_survival, Timepoint != 0)
View(Nov_2020_survival1)
Nov_2020_communities1<-subset(Nov_2020_communities, Timepoint != 1)
Nov_2020_microbes1<-subset(Nov_2020_microbes, Timepoint != 1)
View(Nov_2020_survival1)
number.of.failures <- Nov_2020_survival1$dead
number.of.successes <- Nov_2020_survival1$alive
binomial.denominator <- Nov_2020_survival1$total
number.of.failures <- binomial.denominator - number.of.successes
y <- cbind(number.of.successes, number.of.failures)
View(Nov_2020_microbes1)
View(Nov_2020_communities1)
View(y)
Survival_MRA<- cbind(y,Nov_2020_communities1,Nov_2020_microbes1)
View(Survival_MRA)
Survival_MRA<- Survival_MRA[-c(19:20)]
Tile <- as.factor(Survival_MRA$Tile)
Timepoint <- as.factor(Survival_MRA$Timepoint)
number.of.failures <- Survival_MRA$dead
number.of.successes <- Survival_MRA$alive
y <- cbind(number.of.successes, number.of.failures)
View(y)
number.of.failures <- Survival_MRA$dead
number.of.successes <- Survival_MRA$alive
y <- cbind(number.of.successes, number.of.failures)
number.of.successes <- Survival_MRA$number.of.successes
number.of.failures <- Survival_MRA$number.of.failures
y <- cbind(number.of.successes, number.of.failures)
View(y)
Survival_MRA$Tile <- as.factor(Survival_MRA$Tile)
Survival_MRA$Timepoint <- as.factor(Survival_MRA$Timepoint)
View(Survival_MRA)
Survival_MRA$number.of.successes<-as.character(Survival_MRA$number.of.successes)
Survival_MRA$number.of.failures<-as.character(Survival_MRA$number.of.failures)
View(Survival_MRA)
str(Survival_MRA)
Survival_MRA1<-Survival_MRA %>% mutate_if(is.numeric, scale)
View(Survival_MRA1)
Survival_MRA$number.of.successes<-as.numeric(Survival_MRA$number.of.successes)
Survival_MRA$number.of.failures<-as.numeric(Survival_MRA$number.of.failures)
str(Survival_MRA)
Survival_MRA1$number.of.successes<-as.numeric(Survival_MRA1$number.of.successes)
Survival_MRA1$number.of.failures<-as.numeric(Survival_MRA1$number.of.failures)
str(Survival_MRA)
str(Survival_MRA1)
# Run multicollinearity test
colnames(Survival_MRA1)
Macros<-select(Survival_MRA1,Bare, CCA, Cyanobacteria, EAM, Inverts, Lobophora, Long_turf, Macroalgae, NCCA,Sand, Thick_turf, Turf)
Macros<-select(Survival_MRA1, Bare, CCA, Cyanobacteria, EAM, Inverts, Lobophora, Long_turf, Macroalgae, NCCA,Sand, Thick_turf, Turf)
Macros<-select(Survival_MRA1, Bare, CCA, Cyanobacteria, EAM, Inverts, Lobophora, Long_turf, Macroalgae, NCCA,Sand, Thick_turf, Turf)
print(emmeans(Sty_chla_final, list(pairwise ~ Temp|Site)), adjust = c("mvt"))
library(lmerTest)
library(emmeans)
library(sjPlot)
library(ggplot2)
library(tidyr)
library(dplyr)
library(reshape2)
Full_Physiology<-read.csv("Gradient_chla_clean.csv")
Full_Physiology$Temp<-as.factor(Full_Physiology$Temp)
Full_Physiology$Geno<-as.factor(Full_Physiology$Geno)
Full_Physiology$Site<-as.factor(Full_Physiology$Site)
Full_Physiology$Species<-as.factor(Full_Physiology$Species)
str(Full_Physiology)
Acr_phys<-subset(Full_Physiology, Species == 'Acropora')
Poc_phys<-subset(Full_Physiology, Species == 'Pocillopora')
Por_phys<-subset(Full_Physiology, Species == 'Porites')
Sty_phys<-subset(Full_Physiology, Species == 'Stylophora')
Sty_chla_final<-lmer(Sty_chla_log ~ Temp*Site + + (1|Geno/Site), data = Sty_phys)
anova(Sty_chla_final)
print(emmeans(Sty_chla_final, list(pairwise ~ Temp|Site)), adjust = c("mvt"))
setwd("~/Documents/ODU_Post-doc/Writing/Gradient_physiology/Gradient-physiology/Supplementary Materials /Figure S3")
library(lmerTest)
library(emmeans)
library(sjPlot)
library(ggplot2)
library(tidyr)
library(dplyr)
library(reshape2)
Full_Physiology<-read.csv("Gradient_chla_clean.csv")
Full_Physiology$Temp<-as.factor(Full_Physiology$Temp)
Full_Physiology$Geno<-as.factor(Full_Physiology$Geno)
Full_Physiology$Site<-as.factor(Full_Physiology$Site)
Full_Physiology$Species<-as.factor(Full_Physiology$Species)
str(Full_Physiology)
Acr_phys<-subset(Full_Physiology, Species == 'Acropora')
Poc_phys<-subset(Full_Physiology, Species == 'Pocillopora')
Por_phys<-subset(Full_Physiology, Species == 'Porites')
Sty_phys<-subset(Full_Physiology, Species == 'Stylophora')
#### Acropora ####
Sty_chla_final<-lmer(Sty_chla_log ~ Temp*Site + + (1|Geno/Site), data = Sty_phys)
anova(Sty_chla_final)
print(emmeans(Sty_chla_final, list(pairwise ~ Temp|Site)), adjust = c("mvt"))
#### Stylophora ####
Sty_chla_log<-log(Sty_phys$Chl_cm2)
Sty_chla_final<-lmer(Sty_chla_log ~ Temp*Site + + (1|Geno/Site), data = Sty_phys)
anova(Sty_chla_final)
print(emmeans(Sty_chla_final, list(pairwise ~ Temp|Site)), adjust = c("mvt"))
print(emmeans(Sty_chla_final, list(pairwise ~ Site|Temp)), adjust = c("mvt"))
Sty_chla_final<-lmer(Sty_chla_log ~ Temp*Site + (1|Geno/Site), data = Sty_phys)
print(emmeans(Sty_chla_final, list(pairwise ~ Site|Temp)), adjust = c("mvt"))
Acr_chla_final<-lmer(Acr_chla_log ~ Temp+Site + (1|Geno/Site), data = Acr_phys)
anova(Acr_chla_final)
print(emmeans(Acr_chla_final, list(pairwise ~ Temp)), adjust = c("mvt"))
print(emmeans(Acr_chla_final, list(pairwise ~ Site)), adjust = c("mvt"))
#### Acropora ####
Acr_chla_log<-log(Acr_phys$Chl_cm2)
Acr_chla_final<-lmer(Acr_chla_log ~ Temp+Site + (1|Geno/Site), data = Acr_phys)
anova(Acr_chla_final)
print(emmeans(Acr_chla_final, list(pairwise ~ Temp)), adjust = c("mvt"))
print(emmeans(Acr_chla_final, list(pairwise ~ Site)), adjust = c("mvt"))
#### Pocillopora ####
Poc_chla_log<-log(Poc_phys$Chl_cm2)
oc_chla_final<-lmer(Poc_chla_log ~ Temp*Site + (1|Geno/Site), data = Poc_phys)
anova(Poc_chla_final)
print(emmeans(Poc_chla_final, list(pairwise ~ Temp|Site)), adjust = c("mvt"))
print(emmeans(Poc_chla_final, list(pairwise ~ Site|Temp)), adjust = c("mvt"))
Poc_chla_final<-lmer(Poc_chla_log ~ Temp*Site + (1|Geno/Site), data = Poc_phys)
anova(Poc_chla_final)
print(emmeans(Poc_chla_final, list(pairwise ~ Temp|Site)), adjust = c("mvt"))
print(emmeans(Poc_chla_final, list(pairwise ~ Site|Temp)), adjust = c("mvt"))
setwd("~/Documents/ODU_Post-doc/Writing/Evensen et al. (2021) Coral Reefs/Gradient-physiology/Figures/Figure 3")
library(emmeans)
library(sjPlot)
library(ggplot2)
library(tidyr)
library(plyr)
library(reshape2)
library(dplyr)
library(tidyverse)
library(ggpubr)
library(ggpmisc)
library(svglite)
Relative_thresholds<-read.csv("Relative_Thresholds.csv")
Relative_thresholds$Site<-as.factor(Relative_thresholds$Site)
Relative_thresholds$Species<-as.factor(Relative_thresholds$Species)
str(Relative_thresholds)
Acropora_relative<-subset(Relative_thresholds, Species=='Acropora')
Pocillopora_relative<-subset(Relative_thresholds, Species=='Pocillopora')
Porites_relative<-subset(Relative_thresholds, Species=='Porites')
Stylophora_relative<-subset(Relative_thresholds, Species=='Stylophora')
#### RELATIVE THRESHOLD/MMM ####
Relative_Threshold_mod <- aov(Relative_Threshold ~ Site * Species, data = Relative_thresholds)
plot(Relative_Threshold_mod)
Relative_Threshold_mod <- aov(Relative_Threshold ~ Site * Species, data = Relative_thresholds)
plot(Relative_Threshold_mod)
summary(Relative_Threshold_mod)
Relative_Threshold_mod <- aov(Relative_Threshold ~ Site * Species, data = Relative_thresholds)
summary(Relative_Threshold_mod)
print(emmeans(Relative_Threshold_mod, list(pairwise ~ Species|Site)), adjust = c("tukey"))
print(emmeans(Relative_Threshold_mod, list(pairwise ~ Site|Species)), adjust = c("tukey"))
summary(Relative_Threshold_mod)
